METHOD onactionanlegen_e .
  DATA lo_nd_ergebnisse_eizelne TYPE REF TO if_wd_context_node.

    DATA lo_el_ergebnisse_eizelne TYPE REF TO if_wd_context_element.
    DATA ls_ergebnisse_eizelne TYPE wd_this->element_ergebnisse_eizelne.

*   navigate from <CONTEXT> to <ERGEBNISSE_EIZELNE> via lead selection
    lo_nd_ergebnisse_eizelne = wd_context->get_child_node( name = wd_this->wdctx_ergebnisse_eizelne ).

*   @TODO handle non existant child
*   IF lo_nd_ergebnisse_eizelne IS INITIAL.
*   ENDIF.

*   get element via lead selection
    lo_el_ergebnisse_eizelne = lo_nd_ergebnisse_eizelne->get_element( ).
*   @TODO handle not set lead selection
    IF lo_el_ergebnisse_eizelne IS INITIAL.
    ENDIF.

*   get all declared attributes
    lo_el_ergebnisse_eizelne->get_static_attributes(
      IMPORTING
        static_attributes = ls_ergebnisse_eizelne ).

 data result type i.
 data itab TYPE zz3112_dbresult.
  result = 0.

select * from zz3112_dbresult into itab
  WHERE id = ls_ergebnisse_eizelne-id.
  result = 1.
  ENDSELECT.
* get message manager
DATA lo_api_controller     TYPE REF TO if_wd_controller.
DATA lo_message_manager    TYPE REF TO if_wd_message_manager.

lo_api_controller ?= wd_this->wd_get_api( ).

CALL METHOD lo_api_controller->get_message_manager
  RECEIVING
    message_manager = lo_message_manager
    .
DATA: table_params TYPE wdr_name_value_list,
      ls_params TYPE wdr_name_value.


* report message
  ls_params-name = 'id'.
  ls_params-value = ls_ergebnisse_eizelne-pruefungid.
  APPEND ls_params TO table_params.
  ls_params-name = 'matrikelnum'.
  ls_params-value = ls_ergebnisse_eizelne-matrikelnum.
  APPEND ls_params TO table_params.
  ls_params-name = 'resultid'.
  ls_params-value = ls_ergebnisse_eizelne-id.
  APPEND ls_params TO table_params.
* report message

IF result = 0.
CALL METHOD lo_message_manager->report_success
  EXPORTING
    message_text              = 'Ergebnisse mit Prüfungid &id und Matriklenummer &matrikelnum wurde angelegt.'
    params                    = table_params

    .
INSERT INTO zz3112_dbresult VALUES ls_ergebnisse_eizelne.
  wd_this->fire_to_input_view_plg(
  ).
ELSE.

*   report message
  CALL METHOD lo_message_manager->report_error_message
    EXPORTING
      message_text              = 'Ergebnisse mit Prüfungid &id und Matriklenummer konnte nicht angelegt werden.ID &resultid existiert bereits .'
      params                    = table_params
.

ENDIF.
ENDMETHOD.