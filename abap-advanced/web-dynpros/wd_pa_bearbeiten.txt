method ONACTIONBEARBEITEN_S .

  DATA lo_nd_student TYPE REF TO if_wd_context_node.

  DATA lo_el_student TYPE REF TO if_wd_context_element.
  DATA ls_student TYPE wd_this->element_student.

* navigate from <CONTEXT> to <STUDENT> via lead selection
  lo_nd_student = wd_context->get_child_node( name = wd_this->wdctx_student ).

* @TODO handle non existant child
* IF lo_nd_student IS INITIAL.
* ENDIF.

* get element via lead selection
  lo_el_student = lo_nd_student->get_element( ).
* @TODO handle not set lead selection
  IF lo_el_student IS INITIAL.
  ENDIF.

* get all declared attributes
  lo_el_student->get_static_attributes(
    IMPORTING
      static_attributes = ls_student ).

select * from zz3112_dbstudent
  where  matrikelnum  = @ls_student-matrikelnum
  INTO @data(wa).
ENDSELECT.

if sy-subrc <> 0.
DATA lo_api_controller     TYPE REF TO if_wd_controller.
DATA lo_message_manager    TYPE REF TO if_wd_message_manager.
DATA: table_params TYPE wdr_name_value_list,
      ls_params TYPE wdr_name_value.

lo_api_controller ?= wd_this->wd_get_api( ).

CALL METHOD lo_api_controller->get_message_manager
  RECEIVING
    message_manager = lo_message_manager
    .

* report message
  ls_params-name = 'matrikelnum'.
  ls_params-value = ls_student-matrikelnum.
  Append ls_params TO table_params.

CALL METHOD lo_message_manager->report_element_error_message
  EXPORTING
    message_text              = 'Student mit Matrikelnummer &matrikelnum excesiert nicht.'
    element                   =  lo_el_student
*    attributes                =
    params                    = table_params
.
ELSE.
  wd_this->fire_to_s_bearbeiten_v_plg(
  ).
ENDIF.

endmethod.